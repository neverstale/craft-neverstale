{#
  Neverstale Plugin index template

  @author Zaengle
  @package zaengle/craft-neverstale
  @since 1.0.0
  @see https://github.com/zaengle/craft-neverstale

#}

{%- extends '_layouts/cp' %}
{%- import '_includes/forms' as forms %}
{%- import 'neverstale/_macros' as helpers %}

{%- do craft.neverstale.viteService.register('src/web/assets/neverstale/src/neverstale.ts', false, {
  'depends': [
    'neverstale\\craft\\web\\assets\\neverstale\\NeverstaleAsset',
  ],
}) %}


{%- set ns = craft.neverstale %}
{%- set crumbs = [
  { label: 'Neverstale' | t('neverstale'), url: url('neverstale') },
] %}

{%- set title = 'Neverstale Dashboard' %}

{%- block actionButton %}
  {{ tag('a', {
    class: 'btn',
    href: ns.setup.docsUrl,
    text: 'Documentation'|t('neverstale'),
  }) }}
  {{ tag('a', {
    class: 'btn',
    href: ns.setup.neverstaleAppUrl,
    text: 'Neverstale web app'|t('neverstale'),
  }) }}
{%- endblock %}

{%- block main %}
  <div id="neverstale-container">
    <form id="content" class="content-pane" method="post" data-saveshortcut>
      {{ csrfInput() }}
      {{ actionInput('plugins/save-plugin-settings') }}
      {{ hiddenInput('pluginHandle', 'neverstale') }}
      {{ redirectInput('neverstale') }}
      <h2 class="ns-text-xl">{{ 'Welcome to Neverstale' | t('neverstale') }}</h2>
      {%- if ns.setup.isComplete %}
        <p>Setup is complete and Neverstale is monitoring your content for anything outdated</p>
      {%- else %}
        <p>Complete the three-step setup process to start monitoring your content with Neverstale. You can optionally configure all the plugin's settings via the config file at <code>config/neverstale.php</code>.</p>
      {%- endif %}
        <ol class="ns-list-none ns-pl-0 ns-flex ns-flex-col ns-gap-4">
          <li>
            <details
              {{ attr({
                class: 'ns-rounded ns-border ns-border-gray ns-p-4',
                open: not ns.setup.hasCredentials or not ns.setup.canConnect,
              }) }}>
              <summary class="ns-text-lg ns-font-bold mb-2">
                Step 1:
                {{ (ns.setup.hasCredentials ? 'Neverstale credentials are configured ü•≥' : 'Add credentials ‚ö†Ô∏è')|t('neverstale') }}
              </summary>
                {% if ns.setup.hasCredentials %}
                  {% if ns.setup.canConnect %}
                    {%- set message %}
                      {{ tag('span', {
                        'data-icon': 'check',
                        'data-icon-size': 'small',
                        'role': 'img',
                      }) }}<span>Credentials are valid and the connection to the Neverstale API is healthy</span>
                      {% include 'neverstale/_components/actions/check-connection' with {
                        classes: 'ns-justify-self-end',
                        message: 'Refresh'|t('neverstale'),
                      } %}
                    {%- endset %}
                    {{ helpers.alert(message, 'success') }}
                  {% else %}
                    {%- set message %}
                      {{ tag('span', {
                        'data-icon': 'xmark',
                        'data-icon-size': 'small',
                        'role': 'img',
                      }) }}<span>Could not connect to the Neverstale API with the provided credentials. Please check the values you entered are correct.</span>
                      {% include 'neverstale/_components/actions/check-connection' with {
                        classes: 'ns-justify-self-end',
                      } %}
                    {%- endset %}
                    {{ helpers.alert(message, 'error') }}
                  {% endif %}
                {% endif %}
                {{ forms.autosuggestField({
                  label: 'API Key' | t('neverstale'),
                  instructions: 'You can find your API key in Neverstale after you create your Content Source'|t('neverstale'),
                  name: 'settings[apiKey]',
                  required: true,
                  value: settings.apiKey,
                  suggestEnvVars: true,
                  errors: settings.getErrors('apiKey'),
                  warning: helpers.configOverrideWarning('apiKey'),
                  disabled: craft.neverstale.config.isOverriddenByFile('apiKey'),
                }) }}

                {{ forms.autosuggestField({
                  label: 'Webhook Secret' | t('neverstale'),
                  instructions: 'You can find your Webhook Secret in your Neverstale account settings.'|t('neverstale'),
                  name: 'settings[webhookSecret]',
                  required: true,
                  value: settings.webhookSecret,
                  suggestEnvVars: true,
                  errors: settings.getErrors('webhookSecret'),
                  warning: helpers.configOverrideWarning('webhookSecret'),
                  disabled: craft.neverstale.config.isOverriddenByFile('webhookSecret'),
                }) }}
              <button type="submit" class="btn submit ns-self-start">{{ 'Submit'|t('app') }}</button>
            </details>
          </li>

          <li>
            <details
              {{ attr({
                class: 'ns-rounded ns-border ns-border-gray ns-p-4',
                open: ns.setup.canConnect and not ns.setup.isContentConfigured,
              }) }}>
              <summary class="ns-text-lg ns-font-bold mb-2">
                Step 2:
                {%- if ns.setup.isContentConfigured %}
                  <span>Neverstale is configured to monitor content üí™</span>
                {%- else %}
                  <span>Configure Neverstale to monitor content ‚ö†Ô∏è</span>
                {%- endif %}
              </summary>
              <div
              {%- if ns.setup.isContentConfigured %}
                {%- set message %}
                  {{ tag('span', {
                    'data-icon': 'check',
                    'data-icon-size': 'small',
                    'role': 'img',
                  }) }}<span>Neverstale is configured to monitor content from {{  ns.settings.enabledSections | length }} section(s) </span>
                {%- endset %}
                {{ helpers.alert(message, classes = 'ns-mb-4') }}
              {%- else %}
                {%- set message %}
                  {{ tag('span', {
                    'data-icon': 'xmark',
                    'data-icon-size': 'small',
                    'role': 'img',
                  }) }}<span>Neverstale is not currently configured to monitor content from any section(s) </span>
                {%- endset %}
                {{ helpers.alert(message, 'warning', classes = 'ns-mb-4') }}
              {%- endif %}

              {{ forms.lightswitchField({
                first: true,
                label: 'Enable Neverstale sync' | t('neverstale'),
                name: 'settings[enable]',
                on: settings.enable,
                warning: helpers.configOverrideWarning('enable'),
                disabled: craft.neverstale.config.isOverriddenByFile('enable'),
              }) }}

              {{ forms.checkboxSelectField({
                id: 'enabledSections',
                label: 'Which Sections should be enabled for Neverstale sync?' | t('neverstale'),
                name: 'settings[enabledSectionIds]',
                showAllOption: true,
                warning: helpers.configOverrideWarning('sections'),
                required: true,
                instructions: 'Choose which sections you want to sync with Neverstale.'|t('neverstale'),
                options: craft.app.entries.allSections() | map(section => {
                  label: section.name,
                  id: section.handle,
                  value: section.id,
                  disabled: craft.neverstale.config.isOverriddenByFile('sections'),
                  checked: section.id in (settings.enabledSections | map(section => section.id ?? null)),
                }),
              }) }}
              <button type="submit" class="btn submit ns-self-start">{{ 'Submit'|t('app') }}</button>
            </details>
          </li>

          <li>
            <details
              {{ attr({
                class: 'ns-rounded ns-border ns-border-gray ns-p-4',
                open: ns.setup.canConnect and ns.setup.isContentConfigured and not ns.setup.hasSentContent,
              }) }}>
              <summary class="ns-text-lg ns-font-bold mb-2">
                Step 3:
                {%- if ns.setup.hasSentContent %}
                  <span>Content has been sent to Neverstale üöÄ</span>
                {% else %}
                  <span>Send some content to Neverstale ‚ö†Ô∏è</span>
                {%- endif %}
              </summary>
              <div
              {%- if ns.setup.hasSentContent %}
                {%- set message %}
                  {{ tag('span', {
                    'data-icon': 'check',
                    'data-icon-size': 'small',
                    'role': 'img',
                  }) }}<span>Neverstale has been sent content. <a href="{{ url('neverstale/content') }}">See details.</a></span>
                {%- endset %}
                {{ helpers.alert(message) }}
              {%- else %}
                {%- set message %}
                  {{ tag('span', {
                    'data-icon': 'xmark',
                    'data-icon-size': 'small',
                    'role': 'img',
                  }) }}<span>No content has yet been sent to Neverstale. <a href="{{ url('entries') }}">Save an entry in an enabled section</a> to trigger a send</span>
                {%- endset %}
                {{ helpers.alert(message, 'warning') }}
              {% endif %}
            </details>
          </li>
        </ol>
        <hr>
        <h2>Next steps</h2>

        <div class="">
          {{ tag('a', {
            class: 'btn',
            href: url('neverstale/content'),
            text: 'See detailed content logs'|t('neverstale'),
          }) }}
          {{ tag('a', {
            class: 'btn',
            href: url('utilities/preview-neverstale-content'),
            text: 'Preview what gets sent'|t('neverstale'),
          }) }}
        </div>
      </form>
    </div>
{% endblock %}
